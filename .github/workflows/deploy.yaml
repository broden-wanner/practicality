name: deploy-web

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          cd practicality/frontend/ionic-app
          npm i @ionic/cli -g
          npm install
      - name: Build frontend
        run: |
          cd practicality/frontend/ionic-app
          ionic build --prod
      - name: Upload frontend folder
        uses: actions/upload-artifact@v1
        with:
          name: ionic-dist
          path: practicality/frontend/ionic-app/www

  build-backend:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]
    needs: build-frontend
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        env:
          ENV_ROLE: testing
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          HOST: '*'
        run: |
          python practicality/manage.py check
          python practicality/manage.py test
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
      - name: Get frontend dist
        uses: actions/download-artifact@v1
        with:
          name: ionic-dist
      - name: Deploy
        env:
          HOST_IP: ${{ secrets.HOST_IP }}
          HOST_USERNAME: ${{ secrets.HOST_USERNAME }}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
        run: |
          ls
          source scripts/perform-deploy-from-github.sh
